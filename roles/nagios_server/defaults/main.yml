---
# defaults file for nagios_server
#################### NAGIOS INSTALL AND MAIN CONFIG ####################
nagios_packages:
- "nagios"
- "nagios-common"
- "nagios-contrib"
- "nagios-plugins-all"
- "nagios-selinux"
- "perl-Nagios-Plugin"
- "pnp4nagios"
- "httpd"

nagios_config_path: "/etc/nagios"

# This will generate accounts using htpasswd and bcrypt.
nagios_admins: []
#- name: foo
#  pass: bar (Vault me!)
#- name: baz
#  pass: oof (Vault me!)

nagios_admin_email: "nagios@localhost"
nagios_admin_pager: "pagenagios@localhost"

nagios_htpasswd_path: "/etc/httpd/.nagios_htpasswd"
#TODO configure ldap/htpasswd/mod_authn_form option later
#nagios_auth_type: ldap

nagios_apache_user: "apache"
nagios_system_user: "nagios"

nagios_vhost_fqdn: "nagios.example.com"

# Set this to false if this will be a shared webserver and redirecting by default to Nagios is not desired
nagios_vhost_default_redirect: true

# NOTE this role requires an accessory role to install the cert and key files
nagios_vhost_cert: "/etc/pki/tls/certs/example.crt"
nagios_vhost_cert_chain: "/etc/pki/tls/certs/example-intermediate.crt"
nagios_vhost_cert_key: "/etc/pki/tls/private/example.key"

#################### NAGIOS OBJECT AUTO GENERATION ####################
#### These settings generate object config from group/host vars of ansible inventory items

nagios_objects_auto_generate: true

# If you want to run the autogen against some Ansible inventory group names besides all, change
# this variable. Listed systems must be accessible to run setup and gather facts.
nagios_objects_autogen_groups:
- "all"

# Individual hostnames to exclude from autogen.
# Manual entries in nagios_hostcfgs_list already override any autogen, so no need to add those here.
nagios_objects_autogen_exclude: []
#- "hostA"
#- "hostB"

#################### NAGIOS OBJECT MANUAL CONFIG #######################
#### Full object description variables are here for manually configuring monitoring
# NOTE for commented examples, anything appended with "[*]" is a required attribute to define in a variable for the templates to work.
# See template files for the default values of any optional attributes.

nagios_default_cfg_samples:
  - "commands.cfg"
  - "printer.cfg"
  - "switch.cfg"
  - "windows.cfg"
  - "templates.cfg"

# NOTE Creating a host object manually in this following list will override any auto-generated config from other Ansible "nagios_hostcfg_*" variables.
nagios_hostcfgs_list: []
#- host_name: "hostname" [*]
#  address: x.x.x.x [*]
#  use: linux [*]
#  location: location [*]
#  type: type [*]
#  team: team [*]
#  contacts: "contact_a,contact_b"
#NOTE other optional host object attributes can override the used host template as needed. See host template options.
#NOTE create new service templates whenever possible instead of overriding many settings here
#  services:
#  - name: "service_a"
#    contacts: "contact_a,contact_b"
#  - name: "service_b"

nagios_user_macros:
  USER1: "/usr/lib64/nagios/plugins"
  USER2: "/usr/lib64/nagios/custom_plugins"

nagios_custom_plugins_path: "{{ nagios_user_macros.USER2 }}"


# Hostgroups for os type, location, and team are automatically created. This is for additional hostgroups the host might be in.
nagios_hostgroups_list: []
#- hostgroup_name: "hostgroup_a" [*]
#  alias: "Host Group A" [*]
#  members: [*]
#  - "host1"
#  - "host2"
#  hostgroup_members:
#  - "hostgroup1"
#  services:
#  - use: "svc_template_a" [*] (if using services)
#    contacts: "contact_a,contact_b" [*] (if using services)
#NOTE optionally add other service directives here to override template settings. See all settings for service templates.
# contacts are required for each service for hostgroups because there are no contacts to inherit from hostgroups.

# Put hosts in this to delete existing host configs
nagios_retired_objects: []


nagios_contacts_list: []
#- contact_name: "name" [*]
#  alias: "Alias Name"
#  host_notifications_enabled: "1"
#  service_notifications_enabled: "1"
#  host_notification_period: "24x7"
#  service_notification_period: "24x7"
#  host_notification_options: "d,u,r,f"
#  service_notification_options: "w,u,c,r,f"
#  service_notification_commands:   "notify-by-email,notify-by-sms"  [*]
#  host_notification_commands:      "host-notify-by-email" [*]
#  email:     jdoe@localhost.localdomain  [*] (or pager)
#  pager:     555-5555@pagergateway.localhost.localdomain [*] (or email)
## NOTE address1 through 6 valid
#  address1:    xxxxx.xyyy@icq.com
#  address2:    555-555-5555
#  can_submit_commands:    1

nagios_commands_list: []
#- name: "mycommand" [*]
#  line: "$USER2$/example.sh -H $HOSTADDRESS$" [*]

nagios_notify_cmds_list: []
#- name: "mynotify" [*]
#  line: "$USER2$/notify_example.sh -H $HOSTADDRESS$" [*]

nagios_event_cmds_list: []
#- name: "myevent" [*]
#  line: "$USER2$/event_example.sh -H $HOSTADDRESS$" [*]

#################### NAGIOS OBJECT TEMPLATES #######################
#### Create templates with commonly used settings

# Basic host templates for various OS or hardware
nagios_base_host_templates: []
#- name: "linux" [*]
#  check_command: "check_ssh" [*]
#  initial_state: 'o'
#  max_check_attempts: '3'
#  check_interval: '5'
#  retry_interval: '2'
#  active_checks_enabled: '1'
#  passive_checks_enabled: '1'
#  check_period: '24x7'
#  obsess_over_hosts: '0'
#  check_freshness: '0'
#  freshness_threshold: '0'
#  event_handler: "/usr/lib64/nagios/custom_plugins/event_handler.sh"
#  low_flap_threshold: '20'
#  high_flap_threshold: '50'
#  flap_detection_enabled: '1'
#  flap_detection_options: 'o,d,u'
#  process_perf_data: '0'
#  retain_status_information: '1'
#  retain_nonstatus_information: '1'
#  contacts: "contact_a,contact_b"
#  notification_interval: '10'
#  first_notification_delay: '0'
#  notification_period: '24x7'
#  notification_options: 'd,u,r,f,s'
#  notifications_enabled: '1'
#  stalking_options: 'o,d,u'
#  notes: "notes about host"
#  notes_url: "http://example.com/system-notes"
#  action_url: "http://example.com/system-action"
#  icon_image: "/usr/share/nagios/html/images/linux_host.png"

# Base service templates. Example: basic protocol check with default port
nagios_base_svc_templates: []
#- name: "check_http" [*]
#  service_description: "Check HTTP" [*]
#  check_command: "check_http" [*]
#  is_volatile: '0'
#  initial_state: 'o'
#  max_check_attempts: '3'
#  check_interval: '5'
#  retry_interval: '2'
#  active_checks_enabled: '1'
#  passive_checks_enabled: '1'
#  check_period: '24x7'
#  obsess_over_service: '0'
#  check_freshness: '0'
#  freshness_threshold: '0'
#  event_handler: "/usr/lib64/nagios/custom_plugins/svc_event_handler.sh"
#  event_handler_enabled: '1'
#  low_flap_threshold: '20'
#  high_flap_threshold: '50'
#  flap_detection_enabled: '1'
#  flap_detection_options: 'o,w,c,u'
#  process_perf_data: '1'
#  retain_status_information: '1'
#  retain_nonstatus_information: '1'
#  notification_interval: '10'
#  first_notification_delay: '0'
#  notification_period: '24x7'
#  notification_options: 'd,u,r,f,s'
#  notifications_enabled: '1'
#  contacts: 'contact_a,contact_b'
#  stalking_options: 'o,w,u,c,N'
#  notes: 'System notes'
#  notes_url: 'http://example.com/system-notes/'
#  action_url: 'http://example.com/system-action/'
#  icon_image: "/usr/share/nagios/html/images/http_svc.png"
#  icon_image_alt: 'HTTP Service'
